---
- name: add rpm key
  become: true
  rpm_key:
    key: "{{ nginx_signing_key }}"

- name: add nginx repository
  become: true
  yum_repository:
    name: nginx
    baseurl: "{{ nginx_base_repository }}"
    description: nginx repository
    enabled: true
    gpgcheck: true

- name: install nginx
  become: true
  package:
    name: nginx
    state: present

- name: start nginx
  become: true
  service:
    name: nginx
    state: started
    enabled: true

- name: insert commands in default.conf
  become: true
  blockinfile:
    path: /etc/nginx/conf.d/default.conf
    insertbefore: " #error_page  404              /404.html;"
    block: |
      location /nginx_status {
          stub_status;
          allow 127.0.0.1;
          deny all;
      }


- name: override default home page
  become: true
  copy:
    content: |
      <!DOCTYPE html>
      <html>
      <head>
        <title>Hello world.</title>
        <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
        <style>body {font: normal 18px Arial; margin: 4em;}</style>
      </head>
      <body>
        <p>
          YAML supports multi-line blocks using specific indicators.<br />
          Read more at <a href="https://yaml-multiline.info">YAML-multilin</a>.
        </p>
      </body>
      </html>
    dest: /usr/share/nginx/html/index.html

- name: Creates directory
  become: true
  file:
    path: /etc/nginx-exporter
    state: directory

- name: Ensure group "nginx-exp" exists
  become: true
  group:
    name: nginx-exp
    state: present

- name: Add the user and putting in the group
  become: true
  user:
    name: nginx-exp
    group: nginx-exp

- name: Download nginx-exporter
  become: true
  get_url:
    url: https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.3.0/nginx-prometheus-exporter-0.3.0-linux-amd64.tar.gz
    dest: /etc/nginx-exporter

- name: Extract nginx-exporter
  become: true
  unarchive:
    src: /etc/nginx-exporter/nginx-prometheus-exporter-0.3.0-linux-amd64.tar.gz
    dest: /usr/local/bin
    remote_src: true

- name: Template a file to /nginx_exporter.service
  become: true
  template:
    src: nginx_exporter.service.j2
    dest: /etc/systemd/system/nginx_exporter.service
    owner: bin
    group: wheel
    mode: '0644'

    
- name: Make sure a service is running
  systemd:
    state: started
    name: nginx_exporter
    enabled: true


- name: fail playbook when GET request to port 9113/metrics does not return 'nginx_up 1'
  uri:
    url: http://localhost:9113/metrics
    method: GET
    return_content: true
  register: this
failed_when: "'nginx_up 1' not in this.content"

- name: fail playbook when GET request to port 80 (web server default home page) does not return status code 200.
  uri:
    url: http://localhost:80
    method: GET
    status_code: 200
return_content: false
